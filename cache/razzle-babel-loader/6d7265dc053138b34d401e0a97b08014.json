{"ast":null,"code":"var _jsxFileName = \"/sandbox/src/mdx-theme.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { MDXProvider } from \"@mdx-js/react\";\nimport slugify from \"@sindresorhus/slugify\";\nimport { Link } from \"react-router-dom\";\nimport Highlight, { defaultProps } from \"prism-react-renderer\";\nimport { PageSection } from \"./PageSections\";\nconst THEME = {\n  plain: {\n    color: \"#000\",\n    backgroundColor: \"transparent\"\n  },\n  styles: [{\n    types: [\"keyword\"],\n    style: {\n      color: \"#ff0078\",\n      fontWeight: \"bold\"\n    }\n  }, {\n    types: [\"comment\"],\n    style: {\n      color: \"#999\",\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"string\", \"url\", \"attr-value\"],\n    style: {\n      color: \"#028265\"\n    }\n  }, {\n    types: [\"builtin\", \"char\", \"constant\", \"language-javascript\"],\n    style: {\n      color: \"#000\"\n    }\n  }, {\n    types: [\"attr-name\"],\n    style: {\n      color: \"#d9931e\",\n      fontStyle: \"normal\"\n    }\n  }, {\n    types: [\"punctuation\", \"operator\"],\n    style: {\n      color: \"#333\"\n    }\n  }, {\n    types: [\"number\", \"function\", \"tag\"],\n    style: {\n      color: \"#0076ff\"\n    }\n  }, {\n    types: [\"boolean\", \"regex\"],\n    style: {\n      color: \"#d9931e\"\n    }\n  }]\n}; // Anchor links\n\nconst HeaderLink = _ref => {\n  let {\n    tag: Tag,\n    dataShort,\n    children\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"tag\", \"dataShort\", \"children\"]);\n\n  const slug = slugify(dataShort ? dataShort : children.map ? children.map(c => c.props ? c.props.children : \"\").join(\" \") : children || \"\");\n  return __jsx(Tag, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }), __jsx(\"span\", {\n    className: \"subheading-anchor\",\n    id: slug,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }), children, __jsx(\"a\", {\n    href: \"#\" + slug,\n    className: \"text-current no-underline no-outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    className: \"anchor-icon select-none\",\n    \"aria-hidden\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, \"#\")));\n};\n\nconst H1 = _ref2 => {\n  let {\n    children\n  } = _ref2,\n      props = _objectWithoutProperties(_ref2, [\"children\"]);\n\n  return __jsx(HeaderLink, _extends({\n    tag: \"h1\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }), children);\n};\n\nconst H2 = _ref3 => {\n  let {\n    children\n  } = _ref3,\n      props = _objectWithoutProperties(_ref3, [\"children\"]);\n\n  return __jsx(HeaderLink, _extends({\n    tag: \"h2\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }), children);\n};\n\nconst H3 = _ref4 => {\n  let {\n    children\n  } = _ref4,\n      props = _objectWithoutProperties(_ref4, [\"children\"]);\n\n  return __jsx(HeaderLink, _extends({\n    tag: \"h3\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }), children);\n};\n\nconst H4 = _ref5 => {\n  let {\n    children\n  } = _ref5,\n      props = _objectWithoutProperties(_ref5, [\"children\"]);\n\n  return __jsx(HeaderLink, _extends({\n    tag: \"h4\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }), children);\n};\n\nconst H5 = _ref6 => {\n  let {\n    children\n  } = _ref6,\n      props = _objectWithoutProperties(_ref6, [\"children\"]);\n\n  return __jsx(HeaderLink, _extends({\n    tag: \"h5\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  }), children);\n};\n\nconst H6 = _ref7 => {\n  let {\n    children\n  } = _ref7,\n      props = _objectWithoutProperties(_ref7, [\"children\"]);\n\n  return __jsx(HeaderLink, _extends({\n    tag: \"h6\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }\n  }), children);\n};\n\nconst A = _ref8 => {\n  let {\n    children,\n    href\n  } = _ref8,\n      props = _objectWithoutProperties(_ref8, [\"children\", \"href\"]);\n\n  const isExternal = (href === null || href === void 0 ? void 0 : href.startsWith(\"https://\")) || (href === null || href === void 0 ? void 0 : href.startsWith(\"mailto:\"));\n\n  if (isExternal) {\n    return __jsx(\"a\", _extends({\n      target: \"_blank\",\n      rel: \"noopener\",\n      href: href\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 7\n      }\n    }), children);\n  }\n\n  return __jsx(Link, _extends({}, props, {\n    to: href,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }\n  }), children);\n};\n\nconst Code = _ref9 => {\n  let {\n    children,\n    className,\n    highlight\n  } = _ref9,\n      props = _objectWithoutProperties(_ref9, [\"children\", \"className\", \"highlight\"]);\n\n  if (!className) return __jsx(\"code\", _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 26\n    }\n  }), children);\n  const highlightedLines = highlight ? highlight.split(\",\").map(Number) : []; // https://mdxjs.com/guides/syntax-highlighting#all-together\n\n  const language = className.replace(/language-/, \"\");\n  return __jsx(Highlight, _extends({}, defaultProps, {\n    code: children.trim(),\n    language: language,\n    theme: THEME,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 5\n    }\n  }), ({\n    className,\n    style,\n    tokens,\n    getLineProps,\n    getTokenProps\n  }) => __jsx(\"code\", {\n    className: className,\n    style: _objectSpread({}, style),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, tokens.map((line, i) => __jsx(\"div\", _extends({\n    key: i\n  }, getLineProps({\n    line,\n    key: i\n  }), {\n    style: highlightedLines.includes(i + 1) ? {\n      background: \"#cce0f5\",\n      margin: \"0 -1rem\",\n      padding: \"0 1rem\"\n    } : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }), line.map((token, key) => __jsx(\"span\", _extends({\n    key: key\n  }, getTokenProps({\n    token,\n    key\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 17\n    }\n  })))))));\n};\n\nconst components = {\n  h1: H1,\n  h2: H2,\n  h3: H3,\n  h4: H4,\n  h5: H5,\n  h6: H6,\n  a: A,\n  code: Code,\n  PageSection: PageSection\n};\nexport default (({\n  children\n}) => {\n  return __jsx(MDXProvider, {\n    components: components,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 10\n    }\n  }, children);\n});","map":{"version":3,"sources":["/sandbox/src/mdx-theme.js"],"names":["MDXProvider","slugify","Link","Highlight","defaultProps","PageSection","THEME","plain","color","backgroundColor","styles","types","style","fontWeight","fontStyle","HeaderLink","tag","Tag","dataShort","children","props","slug","map","c","join","H1","H2","H3","H4","H5","H6","A","href","isExternal","startsWith","Code","className","highlight","highlightedLines","split","Number","language","replace","trim","tokens","getLineProps","getTokenProps","line","i","key","includes","background","margin","padding","token","components","h1","h2","h3","h4","h5","h6","a","code"],"mappings":"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","sourcesContent":["import { MDXProvider } from \"@mdx-js/react\";\nimport slugify from \"@sindresorhus/slugify\";\nimport { Link } from \"react-router-dom\";\nimport Highlight, { defaultProps } from \"prism-react-renderer\";\nimport { createContext } from \"react\";\nimport { PageSection } from \"./PageSections\";\n\nconst THEME = {\n  plain: {\n    color: \"#000\",\n    backgroundColor: \"transparent\"\n  },\n  styles: [\n    {\n      types: [\"keyword\"],\n      style: {\n        color: \"#ff0078\",\n        fontWeight: \"bold\"\n      }\n    },\n    {\n      types: [\"comment\"],\n      style: {\n        color: \"#999\",\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"string\", \"url\", \"attr-value\"],\n      style: {\n        color: \"#028265\"\n      }\n    },\n    {\n      types: [\"builtin\", \"char\", \"constant\", \"language-javascript\"],\n      style: {\n        color: \"#000\"\n      }\n    },\n    {\n      types: [\"attr-name\"],\n      style: {\n        color: \"#d9931e\",\n        fontStyle: \"normal\"\n      }\n    },\n    {\n      types: [\"punctuation\", \"operator\"],\n      style: {\n        color: \"#333\"\n      }\n    },\n    {\n      types: [\"number\", \"function\", \"tag\"],\n      style: {\n        color: \"#0076ff\"\n      }\n    },\n    {\n      types: [\"boolean\", \"regex\"],\n      style: {\n        color: \"#d9931e\"\n      }\n    }\n  ]\n};\n\n// Anchor links\n\nconst HeaderLink = ({ tag: Tag, dataShort, children, ...props }) => {\n  const slug = slugify(\n    dataShort\n      ? dataShort\n      : children.map\n      ? children.map((c) => (c.props ? c.props.children : \"\")).join(\" \")\n      : children || \"\"\n  );\n  return (\n    <Tag {...props}>\n      <span className=\"subheading-anchor\" id={slug} />\n      {children}\n      <a href={\"#\" + slug} className=\"text-current no-underline no-outline\">\n        <span className=\"anchor-icon select-none\" aria-hidden>\n          #\n        </span>\n      </a>\n    </Tag>\n  );\n};\n\nconst H1 = ({ children, ...props }) => {\n  return (\n    <HeaderLink tag=\"h1\" {...props}>\n      {children}\n    </HeaderLink>\n  );\n};\n\nconst H2 = ({ children, ...props }) => {\n  return (\n    <HeaderLink tag=\"h2\" {...props}>\n      {children}\n    </HeaderLink>\n  );\n};\n\nconst H3 = ({ children, ...props }) => {\n  return (\n    <HeaderLink tag=\"h3\" {...props}>\n      {children}\n    </HeaderLink>\n  );\n};\n\nconst H4 = ({ children, ...props }) => {\n  return (\n    <HeaderLink tag=\"h4\" {...props}>\n      {children}\n    </HeaderLink>\n  );\n};\n\nconst H5 = ({ children, ...props }) => {\n  return (\n    <HeaderLink tag=\"h5\" {...props}>\n      {children}\n    </HeaderLink>\n  );\n};\n\nconst H6 = ({ children, ...props }) => {\n  return (\n    <HeaderLink tag=\"h6\" {...props}>\n      {children}\n    </HeaderLink>\n  );\n};\n\nconst A = ({ children, href, ...props }) => {\n  const isExternal =\n    href?.startsWith(\"https://\") || href?.startsWith(\"mailto:\");\n  if (isExternal) {\n    return (\n      <a target=\"_blank\" rel=\"noopener\" href={href} {...props}>\n        {children}\n      </a>\n    );\n  }\n  return (\n    <Link {...props} to={href}>\n      {children}\n    </Link>\n  );\n};\n\nconst Code = ({ children, className, highlight, ...props }) => {\n  if (!className) return <code {...props}>{children}</code>;\n\n  const highlightedLines = highlight ? highlight.split(\",\").map(Number) : [];\n\n  // https://mdxjs.com/guides/syntax-highlighting#all-together\n  const language = className.replace(/language-/, \"\");\n  return (\n    <Highlight\n      {...defaultProps}\n      code={children.trim()}\n      language={language}\n      theme={THEME}\n    >\n      {({ className, style, tokens, getLineProps, getTokenProps }) => (\n        <code className={className} style={{ ...style }}>\n          {tokens.map((line, i) => (\n            <div\n              key={i}\n              {...getLineProps({ line, key: i })}\n              style={\n                highlightedLines.includes(i + 1)\n                  ? {\n                      background: \"#cce0f5\",\n                      margin: \"0 -1rem\",\n                      padding: \"0 1rem\"\n                    }\n                  : null\n              }\n            >\n              {line.map((token, key) => (\n                <span key={key} {...getTokenProps({ token, key })} />\n              ))}\n            </div>\n          ))}\n        </code>\n      )}\n    </Highlight>\n  );\n};\n\nconst components = {\n  h1: H1,\n  h2: H2,\n  h3: H3,\n  h4: H4,\n  h5: H5,\n  h6: H6,\n  a: A,\n  code: Code,\n  PageSection: PageSection\n};\n\nexport default ({ children }) => {\n  return <MDXProvider components={components}>{children}</MDXProvider>;\n};\n"]},"metadata":{},"sourceType":"module"}