{"ast":null,"code":"var _jsxFileName = \"/sandbox/src/real.server.jsx\";\nvar __jsx = React.createElement;\nimport App from \"./App\";\nimport React from \"react\";\nimport express from \"express\";\nimport { renderToString } from \"react-dom/server\";\nimport { Helmet } from \"react-helmet\";\nimport { StaticRouter } from \"react-router-dom\";\nimport { Context as ResponsiveContext } from \"react-responsive\";\n\nconst assets = require(process.env.RAZZLE_ASSETS_MANIFEST);\n\nconst cssLinksFromAssets = (public_path, assets, entrypoint) => {\n  return assets[entrypoint] ? assets[entrypoint].css ? assets[entrypoint].css.map(asset => `<link rel=\"stylesheet\" href=\"${public_path}${asset}\">`).join(\"\") : \"\" : \"\";\n};\n\nconst jsScriptTagsFromAssets = (public_path, assets, entrypoint, extra = \"\") => {\n  return assets[entrypoint] ? assets[entrypoint].js ? assets[entrypoint].js.map(asset => `<script src=\"${public_path}${asset}\"${extra}></script>`).join(\"\") : \"\" : \"\";\n};\n\nconst server = express();\nexport const renderApp = (req, res) => {\n  const public_path = `https://${CODESANDBOX_HOST}`;\n  const context = {};\n  const markup = renderToString(__jsx(ResponsiveContext.Provider, {\n    value: {\n      width: 1440\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, __jsx(StaticRouter, {\n    location: req.url,\n    context: context,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, __jsx(App, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }))));\n  const helmet = Helmet.renderStatic();\n  const html = // prettier-ignore\n  `<!doctype html>\n  <html lang=\"\" ${helmet.htmlAttributes.toString()} class=\"no-js\">\n  <head>\n      <script>\n      document.documentElement.className =\n        document.documentElement.className\n        .replace(/no-js/g, '') + ' js ';\n      </script>\n      <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n      <meta charSet='utf-8' />\n      ${helmet.title.toString()}\n      ${helmet.meta.toString()}\n      ${helmet.link.toString()}\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n      <script type=\"text/javascript\">\n      window.PUBLIC_PATH = '${public_path}';\n    </script>\n    ${cssLinksFromAssets(public_path, assets, 'client')} \n  </head>\n  <body>\n      <div id=\"root\">${markup}</div>\n      ${jsScriptTagsFromAssets(public_path, assets, 'client', ' defer crossorigin')}\n  </body>\n</html>`;\n  return {\n    html,\n    context\n  };\n};\nserver.disable(\"x-powered-by\").use(express.static(process.env.RAZZLE_PUBLIC_DIR)).get(\"/*\", async (req, res) => {\n  const {\n    html,\n    context\n  } = await renderApp(req, res);\n\n  if (context.url) {\n    // Somewhere a `<Redirect>` was rendered\n    return res.redirect(301, context.url);\n  }\n\n  res.send(html);\n});\nexport default server;","map":{"version":3,"sources":["/sandbox/src/real.server.jsx"],"names":["App","React","express","renderToString","Helmet","StaticRouter","Context","ResponsiveContext","assets","require","process","env","RAZZLE_ASSETS_MANIFEST","cssLinksFromAssets","public_path","entrypoint","css","map","asset","join","jsScriptTagsFromAssets","extra","js","server","renderApp","req","res","CODESANDBOX_HOST","context","markup","width","url","helmet","renderStatic","html","htmlAttributes","toString","title","meta","link","disable","use","static","RAZZLE_PUBLIC_DIR","get","redirect","send"],"mappings":"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","sourcesContent":["import App from \"./App\";\nimport React from \"react\";\nimport express from \"express\";\nimport { renderToString } from \"react-dom/server\";\nimport { Helmet } from \"react-helmet\";\nimport { StaticRouter } from \"react-router-dom\";\nimport { Context as ResponsiveContext } from \"react-responsive\";\n\nconst assets = require(process.env.RAZZLE_ASSETS_MANIFEST);\n\nconst cssLinksFromAssets = (public_path, assets, entrypoint) => {\n  return assets[entrypoint]\n    ? assets[entrypoint].css\n      ? assets[entrypoint].css\n          .map(\n            (asset) => `<link rel=\"stylesheet\" href=\"${public_path}${asset}\">`\n          )\n          .join(\"\")\n      : \"\"\n    : \"\";\n};\n\nconst jsScriptTagsFromAssets = (\n  public_path,\n  assets,\n  entrypoint,\n  extra = \"\"\n) => {\n  return assets[entrypoint]\n    ? assets[entrypoint].js\n      ? assets[entrypoint].js\n          .map(\n            (asset) => `<script src=\"${public_path}${asset}\"${extra}></script>`\n          )\n          .join(\"\")\n      : \"\"\n    : \"\";\n};\n\nconst server = express();\n\nexport const renderApp = (req, res) => {\n  const public_path = `https://${CODESANDBOX_HOST}`;\n  const context = {};\n  const markup = renderToString(\n    <ResponsiveContext.Provider value={{ width: 1440 }}>\n      <StaticRouter location={req.url} context={context}>\n        <App />\n      </StaticRouter>\n    </ResponsiveContext.Provider>\n  );\n\n  const helmet = Helmet.renderStatic();\n\n  const html =\n    // prettier-ignore\n    `<!doctype html>\n  <html lang=\"\" ${helmet.htmlAttributes.toString()} class=\"no-js\">\n  <head>\n      <script>\n      document.documentElement.className =\n        document.documentElement.className\n        .replace(/no-js/g, '') + ' js ';\n      </script>\n      <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n      <meta charSet='utf-8' />\n      ${helmet.title.toString()}\n      ${helmet.meta.toString()}\n      ${helmet.link.toString()}\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n      <script type=\"text/javascript\">\n      window.PUBLIC_PATH = '${public_path}';\n    </script>\n    ${cssLinksFromAssets(public_path, assets, 'client')} \n  </head>\n  <body>\n      <div id=\"root\">${markup}</div>\n      ${jsScriptTagsFromAssets(public_path, assets, 'client', ' defer crossorigin')}\n  </body>\n</html>`;\n\n  return { html, context };\n};\n\nserver\n  .disable(\"x-powered-by\")\n  .use(express.static(process.env.RAZZLE_PUBLIC_DIR))\n  .get(\"/*\", async (req, res) => {\n    const { html, context } = await renderApp(req, res);\n\n    if (context.url) {\n      // Somewhere a `<Redirect>` was rendered\n      return res.redirect(301, context.url);\n    }\n\n    res.send(html);\n  });\n\nexport default server;\n"]},"metadata":{},"sourceType":"module"}